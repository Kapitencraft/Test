{
  "TYPE": "class",
  "name": "IntersectionTest",
  "superclass": "scripted.lang.Object",
  "implemented": [],
  "methods": {},
  "staticMethods": {
    "main": [
      {
        "retType": "scripted.lang.void",
        "params": [
          {
            "type": "scripted.lang.String",
            "name": "args"
          }
        ],
        "body": [
          {
            "TYPE": "varDecl",
            "name": {
              "type": "IDENTIFIER",
              "lexeme": "mmt",
              "literal": {},
              "line": 8,
              "lineStartIndex": 12
            },
            "targetType": "test.MultipleMethodsTest",
            "initializer": {
              "TYPE": "constructor",
              "target": "test.MultipleMethodsTest",
              "args": [
                {
                  "TYPE": "literal",
                  "value": {
                    "type": "STR",
                    "lexeme": "\"e\"",
                    "literal": {
                      "type": "String",
                      "value": "e"
                    },
                    "line": 8,
                    "lineStartIndex": 26
                  }
                },
                {
                  "TYPE": "literal",
                  "value": {
                    "type": "STR",
                    "lexeme": "\"a\"",
                    "literal": {
                      "type": "String",
                      "value": "a"
                    },
                    "line": 8,
                    "lineStartIndex": 31
                  }
                }
              ],
              "keyword": {
                "type": "IDENTIFIER",
                "lexeme": "MMT",
                "literal": {},
                "line": 8,
                "lineStartIndex": 22
              },
              "ordinal": 0
            },
            "isFinal": false
          },
          {
            "TYPE": "expression",
            "expr": {
              "TYPE": "instCall",
              "callee": {
                "TYPE": "varRef",
                "name": {
                  "type": "IDENTIFIER",
                  "lexeme": "mmt",
                  "literal": {},
                  "line": 9,
                  "lineStartIndex": 8
                }
              },
              "name": {
                "type": "IDENTIFIER",
                "lexeme": "test",
                "literal": {},
                "line": 9,
                "lineStartIndex": 12
              },
              "ordinal": 1,
              "bracket": {
                "type": "BRACKET_C",
                "lexeme": ")",
                "literal": {},
                "line": 9,
                "lineStartIndex": 18
              },
              "args": [
                {
                  "TYPE": "literal",
                  "value": {
                    "type": "NUM",
                    "lexeme": "5",
                    "literal": {
                      "type": "int",
                      "value": 5
                    },
                    "line": 9,
                    "lineStartIndex": 17
                  }
                }
              ]
            }
          },
          {
            "TYPE": "expression",
            "expr": {
              "TYPE": "instCall",
              "callee": {
                "TYPE": "varRef",
                "name": {
                  "type": "IDENTIFIER",
                  "lexeme": "mmt",
                  "literal": {},
                  "line": 10,
                  "lineStartIndex": 8
                }
              },
              "name": {
                "type": "IDENTIFIER",
                "lexeme": "test",
                "literal": {},
                "line": 10,
                "lineStartIndex": 12
              },
              "ordinal": 0,
              "bracket": {
                "type": "BRACKET_C",
                "lexeme": ")",
                "literal": {},
                "line": 10,
                "lineStartIndex": 25
              },
              "args": [
                {
                  "TYPE": "literal",
                  "value": {
                    "type": "STR",
                    "lexeme": "\"Hello!\"",
                    "literal": {
                      "type": "String",
                      "value": "Hello!"
                    },
                    "line": 10,
                    "lineStartIndex": 17
                  }
                }
              ]
            }
          }
        ],
        "flags": []
      }
    ]
  },
  "constructor": [],
  "fields": {},
  "staticFields": {},
  "flags": []
}